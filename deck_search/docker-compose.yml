services:
  deck_elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    container_name: deck_elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=false
      - xpack.graph.enabled=false
      - xpack.watcher.enabled=false
      - xpack.ml.enabled=false
      - ingest.geoip.downloader.enabled=false
    ports:
      - "12002:9200"
      - "12003:9300"
    volumes:
      - deck_es_data:/usr/share/elasticsearch/data
    networks:
      - shotdeck_platform_network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"\\|\"status\":\"yellow\"'",
        ]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s

  deck_search_web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: deck_search_web
    working_dir: /app
    environment:
      - DATABASE_URL=sqlite:///tmp/deck_search.db
      - SECRET_KEY=deck-search-secure-key-2024-prod-ready
      - DEBUG=False
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,deck_search
      - ELASTICSEARCH_HOST=deck_elasticsearch
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_ENABLED=True
      - IMAGE_SERVICE_URL=http://172.50.0.6:8000
      - DJANGO_SETTINGS_MODULE=core.settings
    volumes:
      - .:/app
      - deck_search_static:/app/staticfiles
    ports:
      - "12004:8000"
    depends_on:
      deck_elasticsearch:
        condition: service_healthy
    networks:
      - shotdeck_platform_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/ || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 30s
    restart: unless-stopped

volumes:
  deck_es_data:
  deck_search_static:

networks:
  shotdeck_platform_network:
    external: true
