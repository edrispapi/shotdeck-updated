services:
  image-db:
    image: postgres:17
    container_name: image-db
    environment:
      # These now read from the .env file for consistency
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - image_postgres_17_data:/var/lib/postgresql/data
    networks:
      - shotdeck_platform_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  image_service:
    build: .
    container_name: image_service
    # This line tells Docker Compose to load the .env file
    env_file:
      - .env
    # We only define DATABASE_URL and let Django handle it.
    # The values are automatically picked up from the env_file.
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - USE_POSTGRESQL=1 # If your app needs this
    volumes:
      - .:/service
      - /home/a/Desktop/shotdeck:/host_data:ro
      - ~/shotdeck-media/media:/service/media:rw
    ports:
      - "51009:8000"
    depends_on:
      image-db:
        condition: service_healthy
    networks:
      - shotdeck_platform_network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://localhost:8000/api/schema/swagger-ui/ || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  image_postgres_data:
  image_postgres_17_data:

networks:
  shotdeck_platform_network:
    external: true