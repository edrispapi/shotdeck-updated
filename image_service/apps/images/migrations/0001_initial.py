# Generated by Django 4.2.23 on 2025-08-30 06:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('year', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Movie',
                'verbose_name_plural': 'Movies',
                'ordering': ['-year', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('image_url', models.URLField(max_length=500)),
                ('release_year', models.IntegerField(blank=True, null=True)),
                ('media_type', models.CharField(blank=True, choices=[('movie', 'Movie'), ('commercial', 'Commercial'), ('music_video', 'Music Video'), ('short_film', 'Short Film'), ('tv', 'TV')], max_length=20, null=True)),
                ('genre', models.CharField(blank=True, choices=[('action', 'Action'), ('drama', 'Drama'), ('comedy', 'Comedy'), ('horror', 'Horror'), ('sci_fi', 'Sci-Fi'), ('documentary', 'Documentary'), ('hip_hop', 'Hip Hop'), ('car', 'Car')], max_length=20, null=True)),
                ('color', models.CharField(blank=True, choices=[('warm', 'Warm'), ('cool', 'Cool'), ('neutral', 'Neutral'), ('monochrome', 'Monochrome'), ('vibrant', 'Vibrant')], max_length=20, null=True)),
                ('aspect_ratio', models.CharField(blank=True, choices=[('1.33', '1.33'), ('1.78', '1.78'), ('2.39', '2.39'), ('1:1', '1:1')], max_length=10, null=True)),
                ('optical_format', models.CharField(blank=True, choices=[('anamorphic', 'Anamorphic'), ('spherical', 'Spherical'), ('super_35', 'Super 35')], max_length=20, null=True)),
                ('format', models.CharField(blank=True, choices=[('film_35mm', 'Film 35mm'), ('film_16mm', 'Film 16mm'), ('digital', 'Digital')], max_length=20, null=True)),
                ('interior_exterior', models.CharField(blank=True, choices=[('interior', 'Interior'), ('exterior', 'Exterior')], max_length=20, null=True)),
                ('time_of_day', models.CharField(blank=True, choices=[('day', 'Day'), ('night', 'Night'), ('dusk', 'Dusk'), ('dawn', 'Dawn')], max_length=20, null=True)),
                ('number_of_people', models.CharField(blank=True, choices=[('none', 'None'), ('one', 'One'), ('few', 'Few'), ('crowd', 'Crowd')], max_length=20, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('mixed', 'Mixed')], max_length=20, null=True)),
                ('age', models.CharField(blank=True, choices=[('child', 'Child'), ('teen', 'Teen'), ('adult', 'Adult'), ('elderly', 'Elderly')], max_length=20, null=True)),
                ('ethnicity', models.CharField(blank=True, choices=[('caucasian', 'Caucasian'), ('african', 'African'), ('asian', 'Asian'), ('latino', 'Latino'), ('middle_eastern', 'Middle Eastern')], max_length=20, null=True)),
                ('frame_size', models.CharField(blank=True, choices=[('close', 'Close'), ('medium', 'Medium'), ('wide', 'Wide')], max_length=20, null=True)),
                ('shot_type', models.CharField(blank=True, choices=[('aerial', 'Aerial'), ('high_angle', 'High Angle'), ('low_angle', 'Low Angle'), ('eye_level', 'Eye Level')], max_length=20, null=True)),
                ('composition', models.CharField(blank=True, choices=[('symmetrical', 'Symmetrical'), ('asymmetrical', 'Asymmetrical'), ('rule_of_thirds', 'Rule of Thirds')], max_length=20, null=True)),
                ('lens_size', models.CharField(blank=True, choices=[('wide', 'Wide'), ('normal', 'Normal'), ('telephoto', 'Telephoto')], max_length=20, null=True)),
                ('lens_type', models.CharField(blank=True, choices=[('prime', 'Prime'), ('zoom', 'Zoom')], max_length=20, null=True)),
                ('lighting', models.CharField(blank=True, choices=[('soft_light', 'Soft Light'), ('hard_light', 'Hard Light'), ('silhouette', 'Silhouette')], max_length=20, null=True)),
                ('lighting_type', models.CharField(blank=True, choices=[('natural', 'Natural'), ('artificial', 'Artificial')], max_length=20, null=True)),
                ('camera_type', models.CharField(blank=True, choices=[('dslr', 'DSLR'), ('mirrorless', 'Mirrorless'), ('film', 'Film')], max_length=20, null=True)),
                ('resolution', models.CharField(blank=True, choices=[('720p', '720p'), ('1080p', '1080p'), ('4k', '4k')], max_length=10, null=True)),
                ('frame_rate', models.CharField(blank=True, choices=[('24fps', '24fps'), ('30fps', '30fps'), ('60fps', '60fps')], max_length=10, null=True)),
                ('exclude_nudity', models.BooleanField(default=False)),
                ('exclude_violence', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('movie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='images', to='images.movie')),
                ('tags', models.ManyToManyField(blank=True, related_name='images', to='images.tag')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
                'ordering': ['-created_at'],
            },
        ),
    ]
