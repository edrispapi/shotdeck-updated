# Generated by Django 5.2.6 on 2025-09-17 11:50

import django.contrib.postgres.search
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('images', '0008_filter_filteroption'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgeOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Age Option',
                'verbose_name_plural': 'Age Options',
                'db_table': 'age_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_age_value')],
            },
        ),
        migrations.CreateModel(
            name='AspectRatioOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Aspect Ratio Option',
                'verbose_name_plural': 'Aspect Ratio Options',
                'db_table': 'aspect_ratio_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_aspect_ratio_value')],
            },
        ),
        migrations.CreateModel(
            name='CameraTypeOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Camera Type Option',
                'verbose_name_plural': 'Camera Type Options',
                'db_table': 'camera_type_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_camera_type_value')],
            },
        ),
        migrations.CreateModel(
            name='ColorOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Color Option',
                'verbose_name_plural': 'Color Options',
                'db_table': 'color_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_color_value')],
            },
        ),
        migrations.CreateModel(
            name='CompositionOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Composition Option',
                'verbose_name_plural': 'Composition Options',
                'db_table': 'composition_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_composition_value')],
            },
        ),
        migrations.CreateModel(
            name='EthnicityOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Ethnicity Option',
                'verbose_name_plural': 'Ethnicity Options',
                'db_table': 'ethnicity_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_ethnicity_value')],
            },
        ),
        migrations.CreateModel(
            name='FormatOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Format Option',
                'verbose_name_plural': 'Format Options',
                'db_table': 'format_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_format_value')],
            },
        ),
        migrations.CreateModel(
            name='FrameRateOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Frame Rate Option',
                'verbose_name_plural': 'Frame Rate Options',
                'db_table': 'frame_rate_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_frame_rate_value')],
            },
        ),
        migrations.CreateModel(
            name='FrameSizeOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Frame Size Option',
                'verbose_name_plural': 'Frame Size Options',
                'db_table': 'frame_size_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_frame_size_value')],
            },
        ),
        migrations.CreateModel(
            name='GenderOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Gender Option',
                'verbose_name_plural': 'Gender Options',
                'db_table': 'gender_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_gender_value')],
            },
        ),
        migrations.CreateModel(
            name='GenreOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Genre Option',
                'verbose_name_plural': 'Genre Options',
                'db_table': 'genre_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_genre_value')],
            },
        ),
        migrations.CreateModel(
            name='InteriorExteriorOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Interior/Exterior Option',
                'verbose_name_plural': 'Interior/Exterior Options',
                'db_table': 'interior_exterior_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_interior_exterior_value')],
            },
        ),
        migrations.CreateModel(
            name='LensSizeOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Lens Size Option',
                'verbose_name_plural': 'Lens Size Options',
                'db_table': 'lens_size_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_lens_size_value')],
            },
        ),
        migrations.CreateModel(
            name='LensTypeOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Lens Type Option',
                'verbose_name_plural': 'Lens Type Options',
                'db_table': 'lens_type_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_lens_type_value')],
            },
        ),
        migrations.CreateModel(
            name='LightingOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Lighting Option',
                'verbose_name_plural': 'Lighting Options',
                'db_table': 'lighting_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_lighting_value')],
            },
        ),
        migrations.CreateModel(
            name='LightingTypeOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Lighting Type Option',
                'verbose_name_plural': 'Lighting Type Options',
                'db_table': 'lighting_type_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_lighting_type_value')],
            },
        ),
        migrations.CreateModel(
            name='MediaTypeOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Media Type Option',
                'verbose_name_plural': 'Media Type Options',
                'db_table': 'media_type_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_media_type_value')],
            },
        ),
        migrations.CreateModel(
            name='NumberOfPeopleOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Number of People Option',
                'verbose_name_plural': 'Number of People Options',
                'db_table': 'number_of_people_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_number_of_people_value')],
            },
        ),
        migrations.CreateModel(
            name='OpticalFormatOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Optical Format Option',
                'verbose_name_plural': 'Optical Format Options',
                'db_table': 'optical_format_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_optical_format_value')],
            },
        ),
        migrations.CreateModel(
            name='ResolutionOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Resolution Option',
                'verbose_name_plural': 'Resolution Options',
                'db_table': 'resolution_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_resolution_value')],
            },
        ),
        migrations.CreateModel(
            name='ShotTypeOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Shot Type Option',
                'verbose_name_plural': 'Shot Type Options',
                'db_table': 'shot_type_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_shot_type_value')],
            },
        ),
        migrations.CreateModel(
            name='TimeOfDayOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='مقدار گزینه')),
                ('display_order', models.IntegerField(blank=True, help_text='ترتیب نمایش', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='متادیتای اضافی', null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(help_text='وکتور جستجو برای PostgreSQL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Time of Day Option',
                'verbose_name_plural': 'Time of Day Options',
                'db_table': 'time_of_day_options',
                'ordering': ['display_order', 'value'],
                'constraints': [models.UniqueConstraint(fields=('value',), name='uq_time_of_day_value')],
            },
        ),
    ]
